== medium ==
  
== probably next up+low prio ==

 use mencoder keyint on rip.
   try it out, can it rip?  Can it merge? well?
     re-do various EDL's I have :P
 split the two projects somehow (project + distribution)
    two releases: experimental, normal (no imagemagick)
 preferences merger...hmm...;
  compare computer DVD playback with physical player...
  @mencoder.exe distributor: OCI plz? puh-lease?

== slightly lower than that ==

  unit test the GUI
  no subtitles on national treasure...
  
  ask if there's a "cross platform way to split files accurately" besides my hacky kludge.

  popup "you may now watch": bring it to the front...
  
  easy editor for this style of edit
  partner (Jon, Karlie if interested...give beta)
    create lotsa filters
  beta release
  some better ripper...
    maybe vlc is bound by the same constrains mplayer is?
    maybe rip it to a more precise encoding, then edit it?

== DVD monetary backlog (unordered) ==

@dvd flick do you need that frequent i-frames?
  rename bat as template.bat
  can parse IMDB (require they put in the URL by hand fer now)
    add stuffs to imdb hmmm
    IMDB easy mapping
  all dogs go to heaven...
  can blank out the video, with audio continuing through...
add an option "just save full disk (unedited) to hard drive..."
  add an option "just save full disk (edited) to hard drive...well compressed"
    or do we want to do that by default anyway? (does it help burning? it helps with file size...hmm...)
@VLC: hard crash when ripping that one DVD...long one, about the constitution...
auto-zip it with my rake task :)
check DVD patent expiration date
better burning screencast

make sure can work with very large DVD's...
  can use a fast temp drive, save through to other :P
    only prompt if have two...
  pass a better title through when ripping so it doesn't just say dvd://1 always
  can have collaborators re-selling EDL's
    good license for their stuff like "public domain" or what not :P Can't be a hypocrite now, can I?
    80/20
  .ts doesn't seem too awesome....

k9 might preserve/shrink well...hmm...auto calculation may be possible...hmm...
better icon...
ensure file exists after we created it...and has a reasonable size, before declaring success
      148 cars_widescreen_2006_edited.ps
use DVD navigator ?
  http://msdn.microsoft.com/en-us/library/dd388584(v=VS.85).aspx
  with an avi file sink?
authorize.net instead of paypal?
blu-ray support somehow (real-time? rip?)
legal shtuff (LICENSE)
some type of installer that can setup the registry...
auto-assignment of EDL's to media:
  DVD's (right click on DVD player, rip with SC?)
a real website
instructions on how to do their own (private) EDL or do one and submit it (public), or email their friends :P
double buffering hard drive/incoming copying from DVD might speed things, if your HD is fast.
personalized copier might be faster than the "type" command.
merge with preferences
For the monetized version: nothing but cut and paste, no merging et al
mplayer EDL's
add option to "just rip a DVD of your own straight full thing"
avisynth?
make the progress bar map "better" to the size of the various sections...
detect occurrence of these type errors: dvdnav warning: cannot get next block (Error reading from DVD.) somehow (file size...)
per movie, various EDL's, one includes profanity, one just violence, one paranoid, etc.
when there are several, it lets you just choose between the ones that are valid (?)

ask VLC is "adding 0.23 expected?" "do you have the same constraints as mplayer?"
ask VLC "fuzzy menus on the happiest baby dvd expected?"
slightly faster copying possible (664 versus 887 seconds to combine them all together.)
@mplayer "when it says nearest keyframe, that could be in the future?" 
@mplayer "when I say play for 3.2, and the keyframe is 0.5 before, does it end up playing for 3.2 or 3.7?"
burnable to DVD/CD/multi DVD automagically... (auto-burn insert your new disk!)
    can *re-use* original navigation stuffs, less the profanity (is that possible? VobBlanker help, perhaps?)
  can lop off sections to save space (?)
  can burn extras from the DVD, too?
    optionally ?
  transcode to condense...
  split to allow?
@smplayer: playing DVD's doesn't work currently

== random backlog ... note: just plow forward, to "grab" available ideas...except that for now, just what *I* plan on needing for myself (filters for what I need/want). ==

pass unit tests again jruby

@mplayer and VLC "you should seek better, like the ogg vorbis fellas recommend..."
report to jruby "when one thread dies, the GUI becomes unresponsive" (and others already previously reported to ruby-forum.com...)
  DVD's (right click on DVD player, play with SC?)
    use spiffy differentiation for DVD's on windows
speed up slow unit tests
can "watch as it is being ripped" (concat, watching it as it grows faster than you watch...)
make the overlay window uncloseable (?)
note that youtube "can" be downloaded then a local edited copy created, from that download. (mb add downloading ability?)
a "certified clean" list (?)
screencast of things helpful (use, creation...).
tune up the levels...
prototypes of the experimental stuff (overlay, track time while recording -> map file, specifiable levels, more?)

fix:
  0:01:01.9 next will be at 0:01:02.0s (r [or q to quit]):
  0:01:04.0 next will be at 0:01:06.5s (blanked) (r [or q to quit]): "warning--unable to track screen time for some reason" # *of course you can't track it now!*

byu.tv descriptor
youtube non full screen: work with all browsers
easier "here's how on the command line, BTW"
amazon player
a netflix player descriptor
  "just choose VLCx55" LOL
beep at them when not tracking [?]
  default on...hmm

Just fold if s....

a descriptor for some closed source app player...

can "overlay-audio/video"

GUI:
 preferences for levels, etc.
  
blanker: allow for one side of the screen or another...

PISH
  release it with both until scared (?)
  split projects when scared (editor versus normal)/make projects work with direct editing, et al...
    split online from DVD, et al
  Note: get the whole thing working then release it all :P

check that youtube is working well again for all screen resolutions...

run it off a normal person (hulu, DVD). rinse and repeat

advertise on ruby flow

"ripperzy-ize" (low prio)
    can record from online [huh? do I even want this?]
      maybe can record something, then extract the bad, and get a better looking video...
      low prio
      remove commercials?
        myth cutlist?

DRY up :levels--it's in the ocr spec as well as the others...

unit tests run with normal ruby

back off on mouse jerking...only every so often?
  maybe increase timings as you get farther along, to accomodate for drift?

preference for beeping at them, et al

itunes video on demand player

blockbuster "rent" on demand player

no money making for now...all volunteer...more respectful.
  or make it so it can work with an editor of some kind...like a "save here" command line snip this tuck that.
    probably only possible after creating the desktop streamer hmm

no releasing experimental for now, I guess

integrate with librivox' audio so you can avoid profanity in classics.  Somehow.  This would be nice for portable players.
  You know, for static things like this, a 'pre-cutter' would sure be convenient...
  provide download of edited mp3's for people.  ahhh.
  
itunes player for profanity (music)?

make a list of "known clean" movies...hmm...

an "online anybody can chat while watching this movie" (or anybody can edit this wav and listen to it as overlay...) prefer the latter.

an online applet web runnable? Why not?
  click here to watch your favorite film edited on hulu! Just click! [* yea!]
  
code refactors: "screen time change", order should be swapped in bin/x output (just cleanup)

easier installation for windows: self-extracting exe's :)
  later: .msi?

can blank overlay with added text like "and you are one awesome klingon"

ability to record it from online/live, then apply edits.

add my stuff to imdb...? make a wiki?

user customizable levels...
  maybe even "I don't like ones that are x, y, z", or "boring level x"

with VLC/youtube non full screen, it does the annoying mouse thing needlessly (which doesn't bug as much these days...)

can overlay with wav file (would work already for VLC [?], could also "click to mute" for others...hmm...)

the muting currently is so togglesy...if VLC ever fixes itself, fix this! 

fix any/all pending tests...

can permanently black out certain coords to keep things prettier...et al
  remove black when they really move the mouse?

Linux port (call that good enough for usability on TV's...), should be...
  OS X port

blanker outer with user specifiable color
  better default color?

Auto mute/blank commercials?

transfer ownership to an LLC
  new github username

overlay/replace current playback with some url of audio or video
  user editable joke overlays (like a wiki...)
  realtime overlays (like group chat for those watching the film...)

control volume programmatically (using mouse) on the player itself.
control mute programmatically (using mouse) on the player itself.
control location programmatically (using mouse) on the player itself.

compare VLC (and other) timings with a real DVD player, and with netflix instant, etc.

Have a "list of all known movies (url's)" and be able to open (IE et al) to the correct part, and start playing them, and they work...
  or known parseable imdb's

does my sweet heart have any suggestions? (make it work well for laymen)

web browser plugin?
  popups *inside* netflix "play this edited" ?

Programmatically do all of the above, by driving VLC with libvlc (its API).
  So this would be basically tracking VLC using its libvlc callbacks, instead of screen times
  fork the Python project?
  VLC
    use VLC's web interface? telnet?
    optimize it with best appropriate iframes (LOL)

integrate with google TV...bravia...maybe...somehow...boxxee? roku?
  itunes TV? apple tv? ps3?

OCR the captioning as an auto profanity filter? (or perhaps download subtitles to be able to pre-screen), like the python fella does.

--server?  optionally higher prio?

irb(main):001:0> a = File.open('big1', 'w')
=> #<File:big1>
irb(main):002:0> a.seek 10_000_000_000
=> 0
irb(main):003:0> a.write 'b'
=> 1
irb(main):004:0> a.close # freeze mri 1.9.2
=======
take out all require 'rubygems'ses...

package with portable imagemagick (meh)

make a "book edit list" (word x is at position y...)