  === patentzy yes actually do vaguely ordered ===
      blu-ray OCR
        more blu-ray stuff: can ID them, can playback (through...mkv? VLC? powerdvd OCr/scripted?)
        some blu-ray player descriptor somehow
      accomodate splits vs. blanks and work
      
    post a demo of it playing back blu-ray edited local computer, +- projector, +- playon (?)
    I can forsee some browser window that pulls up some sweet player [mod vlc plugin?] somehow something quality anyway, to play local media, or remote
      or same thing but for upconverting...but how?
   bounty NACL VLC :P
    could add dragging since we already control the mouse up and down, and movements etc., for example to skip forward etc.
    a little robot demo thingy that can "click" your remote (or hardware) to fast forward through certain scenes, et al
	  EDL can say "this exact text was at this exact time" to allow for matching with other videos of same content that may have slightly different timestamps/speeds/start time etc.
      with several, or start one, end one, etc.
	    allow for extra start time offset for videos, if netflix instant has any
    a way to integrate with cable TV, ex: "this show we know started at 1:01, and its offsets should be this after that point"
    it can query the currently open browser window, check to see which movie it's playing, and auotmatically spawn off a correct player instance with EDL for that movie
      based on title or url.
    netflix "try this srt, does it match?" no "what about this one, now?"
    it can "infer" where the thumb slider would be, and "drag" it to where it infers the new timestamp location should likely be, for skipping et al.
    I can imagine a system that scans incoming audio, does voice recognition sofware analysis on it, search for (angry tones, profanities, "questionable" tones/text like making love), and excludes them from output [search forward, skip forward, just display nothing, either one, mute audio, decrease audio et al].
    make an API web service that can search for EDL's
	  or with youtube, use the api to fast forwarrd there
	    and if it isn't already loaded, display an extra notice "forwarding" or what not.
		and/or display some other overlay and or audio in place of the video or audio, or supplementing it.
    a video of "recording to broadcast it" (or save it one by one)
    can parse a screenplay et al to look for violence/profanity/sex
      can parse/detect "innuendo" based on natural language semantics, from subtitles et al.
    can "suck in" a large list of EDL's from imdb at build time, 
      and/or a "resync" button, to re-download just the list of updated EDL's/IMDB wiki settings [?]
    can handle multiple dvdid's et al (same EDL) (mostly done already)
    can "obscure" full frames [sections of frames] and/or "partial" frames or sections of frames (ex: lips, nudity)
    can add extra overlays of text (personalized subtitles, like)
    some tie in with blog posts
      some tie in with google +/facebook for community viewing/editing/realtime collaboration/editing/vieweing.
    track the audio noise level, use that to auto-scan for violence
    use the descriptive captioing audio to discover violent scenes (she says "he hits her" or what not), or for other questionable scenes.
    ratings system, where users can rate based on various criteria/statistics, each EDL, and it aggregates them to display/obtain/use a sum rating metric
    can 'remove' or 'obscure' CC or subtitles deemed offensive
    it can pull in a DVD based just on the dvd-id "query id, not local? go get it from online to see if the list has been updated since"
    control VLC RC to overlay a logo dynamically
    can control volume *and* play other audio
    can permanently black out certain coords to keep things prettier...et al
    remove black when they really move the mouse?
    a transport schema talking from a sensible cinema database "to" a player which uses it, and/or has selection options for levels of (content category) or can pick options they want, stored in sensible cinema database or in the "player" side, with transfer/communication between the two.  Ex: XML as a transport, oauth for authentication, etc. etc.
      or they could transmit a time signature "across the wire" somehow (ex: every second), which could be used to react to time events (skip, mute) appropriately.  Or allow for programatic callbacks "call me at this time" or "at this time do this action" or the like, and/or accomodate for buffers/freezing etc. [kind of already demo'ed this one]
    can add to to supplement EDL + EDL timestamps
    can pick specific profanities to avoid (I think I demo'ed this already actually)
    it can scan "playing" instant streaming titles, and/or OCR or take the audio and look for words, to check for profanity.
      it can examine "output volume level" to auto-detect violence scenes.
      similarly for "questionable" content
      it can detect from subtitles (and/or OCR, same thing), questionable content, or violence, based on words used
    use multiple filters/complex mapping graphs to overlay just the exactly correct overlay: http://ffmpeg.org/libavfilter.html
    user preference "how many down clicks on volume for profanity" (already possible)
    make it so it can suck in from "another wiki" the DL's, at package time, somehow (just one)
      or even just suck in any web file, for starters
    space -> advance from pause until next edit item?
    amazon player descriptor, just in case ;P
    can jerk mouse only every so often (cheap would be to just arbitrarily have it from x to y, demo that)
    can scan several player descriptors to "pick the right one" (kind of already showed/did this one)
    post some playon.tv demo screencast...this should prove all shouldn't it [?]
    can "control mouse" to drag it to change location (ex: "move down 10 pixels at beginning of movie" LOL)
    beep at them/warn when not tracking [?]
      default on...I think.
    can jerk mouse more often closer to failure sections...
      and/or resize the playing/streaming window to match it when the mouse "has been moved recently" +- by us, or not.
    can pull one from imdb at all, video "show it creates a file"
    C DVD player: minimize instead of skip :P
    don't mute, just almost mute LOL or almost mute and static-ify
      or combine the two
    can suck it in "in realtime" from online, and parse it +- from a user editable wiki
    a UI to select categories, save as preference, apply it each time at DVD selection time
    don't use timecodes, use "% of the movie" and "total length" perhaps?
    look at patents for other ideas? [+- nissim patents?]
    just pause it, tell them how far to fast forward at that point :P [somewhat already done/showed actually, thanks to mplayer]
    
    have the user forced to tell me what each digit is, themselves, at runtime, for OCR :P
    the online edl stuff itself (its todo list)
    javascript API
      phase 1: done
      phase 2: I can accomodate for pausing, too.
      phase 3: I can re-train based on events of stoppage (buffering et al)
      phase 4: I can constantly poll and react appropriately to current timestamp
    post video demo of it streaming to a console device
    maybe could just "play from x to y" [no exclude info?] instead of "here are the bad parts"
    stage one: query, auto-download when they hit a netflix movie of some type
      stage two: chrome plugin for the same, auto-detect, auto-user, auto-download, auto-watch edited :)
    can insert deleted scenes et al [even external scenes :P] (already showed it somewhat)
    many others were already completed and done from this list and removed
    there are some more ideas in the TODO file itself, and/or on the blog sites where I have posted other ideas too
