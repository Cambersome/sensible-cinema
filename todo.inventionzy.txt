  === patentzy yes actually do vaguely ordered ===
      cheap minimize demo "fake auto" :)
      cheap static-ify demo for mutes
      also a straight "half mute" demo, using volume downs/ups     

    url -> url inference [hopefully this is cake...]
    cheap minimize via (probably foreground window + API real windows API) 
    manual select which to include into an EDL
    user preference "how many down clicks on volume for profanity"? 
    make it so it can suck in from "another wiki" the DL's, at package time, somehow (just one)
      or even just suck in any web file, for starters
    youtube: use the javascript API somehow, like http://universalsubtitles.org/en/
      phase 1: does they use inferred timestamp?  can I use that generally, too? [do phase 1--publish simple javascript demo of it muting for awhile after startup]
    space -> advance from pause until next edit item?
    add fine grained "new ratings" to some demo EDL
    infer edl from url for netflix
    amazon player descriptor, just in case ;P
    make it able to "map" to a fake netflix' adjusted timing, just rough demo/unit test [low prio since we can already auto-adjust timing info based on circumstance]
    can jerk mouse only every so often (cheap would be to just arbitrarily have it from x to y, demo that)
    can scan several player descriptors to "pick the right one"
    edited streamer screencast demo (the rumor guy demo, like zediva)
    incorporate the DL translator from the BYU-I fella
    post a demo of it playing back blu-ray edited local computer, +- projector, +- playon (?)
    fix the failing 9 digit test the fancy shmancy way :P
    post some playon.tv demo screencast...this should prove all shouldn't it [?]
    can "control mouse" to drag it to change location
    blu-ray player descriptor somehow
    beep at them/warn when not tracking [?]
      default on...I think.
    can jerk mouse more often closer to failure sections...
    can pull one from imdb at all, video "show it creates a file"
    make it suck in large list of EDL's from imdb at build time
    C player: minimize instead of skip :P
    C player: don't mute, just almost mute LOL or almost mute and static-ify
    can suck it in "in realtime" from online, and parse it, for demo purposes
    password protect it or whatever, to disallow heavier settings
    a UI to select categories, works
    edited blu ray movie playback screencast, as that's apparently not in the patent...
    don't use timecodes, use "% of the movie" and "total length" perhaps?
    look at their patents for other ideas? [all patents, nissim patents?]
    just pause it, tell them how far to fast forward at that point :P
    have the user forced to tell me what each digit is, themselves :P
    the online edl stuff itself
    javascript API
      phase 2: I can accomodate for pauses, too.
      phase 3: I can re-train based on events of stoppage
      phase 4: I can constantly poll and react
    post a demo of it streaming to a console device
    categories filterable by "level" "profanity level 2 and below is ok for me and my kids"
    maybe could just "play from x to y" [no exclude info?] 
    stage one: query, auto-download when they hit a netflix movie of some type
      stage two: chrome plugin for the same
    editor that can use OCR, too :P
    can insert deleted scenes et al [even external scenes :P]
  can have user submittable bookmarks, kind of like how espn3 does their playbacks...hmm...
