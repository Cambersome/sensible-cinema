<h2><%= url ? url.name + " (Edited)" : "youtube not in our edited system yet, please click 'unedited' in the black box below the movie to add it!" %></h2>

<div id="player_with_controls" style="width: 100%;"> <!-- width for fullscreen needed it -->
  <div id="ytplayer_div"></div>
  <br/>

  <h3>
  <a href='' onclick="youtube_pimw_player.playVideo(); return false">&#9654;</a>&nbsp;&nbsp;<a href='' onclick="youtube_pimw_player.pauseVideo(); return false">&#9612;&#9612;</a>
  volume:<input id="vol-control-id" type="range" min="0" max="100" step="1" oninput="SetVolume(this.value)" onchange="SetVolume(this.value)" style="max-width: 100px; display:inline;"></input>
  <div id="current_time_id" style="display: inline;"></div>  <a href='' onclick="toggleFullScreen(); return false">fullscreen</a>

  <br/>
  seek:<input id="seek-control-id" type="range" min="0" max="100" step="1" onmouseup="seekTo(this.value);" ontouchend="seekTo(this.value);" style="max-width: 150px; display:inline;"></input><!-- not sure how to not super seek here on drag :| -->
  res: <div id="quality_div_id" style="display: inline;"></div> 
  <a href=# onclick="youtube_pimw_player.setPlaybackQuality(youtube_pimw_player.getAvailableQualityLevels()[0]); return false; /* XXXX cue off actual video size */">use max</a>.
  </h3>
  
</div>

<!-- match amazon coloring for my stuff :| -->
<style>
input,select {
  color: black;
}
</style>

<div style="height: 760px; max-width: 620px; background: black;" id="show_your_instructions_here_id"> <!-- plugin binds here -->
</div>

<p>Seeing closed captions? To turn them off go to <a href=youtube.com>youtube.com</a> and watch something and turn them off there.

<h3>Create new other (youtube)</h3>
Enter url of movie here:
<form action="/new_manual_url" method="GET">Your Movie's url: <input type="text" name="url"/>
  <input type="submit" value="Submit">
</form>

<br/>
Watch this youtube <a href="https://youtu.be/<%= youtube_id %>">unedited</a>. <!-- in case it matches youtube's terms of use better -->
<br/>
<a href=/terms_of_service_youtube>Terms of use</a>.
<br/>
<a href=/privacy>Privacy policy (including youtube's)</a>.

<script>
    function SetVolume(val)
    {
      console.log("setting volume=" + val);
      youtube_pimw_player.setVolume(val);
      window.localStorage.setItem("youtube_volume", val); // for restarts
    }
    
    function seekTo(val) {
      var desired_time_seconds = youtube_pimw_player.getDuration() / 100.0 * val;
      console.log("built-in slider seeking to " + desired_time_seconds);
      youtube_pimw_player.seekTo(desired_time_seconds);
    }
    
    function setTime(val) {
      youtube_pimw_player.setVolume(val);
    }
    
    function timeStampToHumanHere(timestamp, tenth_digits) {
      var hours = Math.floor(timestamp / 3600);
      timestamp -= hours * 3600;
      var minutes  = Math.floor(timestamp / 60);
      timestamp -= minutes * 60;
      var seconds = timestamp.toFixed(tenth_digits); //  -> "12.3" or "2.3"
      // padding is "hard" apparently in javascript LOL
      if (hours > 0)
        return hours + "h " + minutes + "m " + seconds + "s";
      else
        return minutes + "m " + seconds + "s";
    }
    
    function updateTime() {
      current_time_id.innerHTML=timeStampToHumanHere(youtube_pimw_player.getCurrentTime(), 0) + "/" + timeStampToHumanHere(youtube_pimw_player.getDuration(), 1);
      document.getElementById('seek-control-id').value = youtube_pimw_player.getCurrentTime() / youtube_pimw_player.getDuration() * 100; 
      document.getElementById('quality_div_id').innerHTML = youtube_pimw_player.getPlaybackQuality();
    }
    
    function toggleFullScreen() {
      var fullscreenElement = document.fullscreenElement || document.mozFullScreenElement || document.webkitFullscreenElement;
    
      if (fullscreenElement) {
        exitFullScreen(); // from plugin
        return;
      }
      var iframe = document.getElementById("player_with_controls");
      // var iframe = youtube_pimw_player.getIframe(); // no seek controls :\

      var requestFullScreen = iframe.requestFullScreen || iframe.mozRequestFullScreen || iframe.webkitRequestFullScreen;
      if (requestFullScreen) {
        requestFullScreen.bind(iframe)();
      }
    }
    

  // Load the IFrame Player API code asynchronously.
  var tag = document.createElement('script');
  tag.src = "https://www.youtube.com/player_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // Replaces the 'ytplayer' element with an <iframe> and
  // YouTube player after the API code downloads.
  var youtube_pimw_player;
  function onYouTubePlayerAPIReady() {
    youtube_pimw_player = new YT.Player('ytplayer_div', { // might as well new it up here so it can start polling it more aggressively than "when its ready with 500ms polling" plus some setup logic gets confused without it already setup :|
      height: '100%', // default (no value) is 360px  ;|
      width: '100%',
      videoId: '<%= youtube_id %>',
      enablejsapi: true,
      playerVars: { 'fs': 1, 'controls': 0, 'rel': 0 },
      events: {
        'onReady': onPlayerReady,
         onStateChange: onPlayerStateChange
      }
    });
  }

function onPlayerReady(event) {
  console.log("youtube_player ready and setup! auto playing...");
  <% if !mobile?(env) && url %>
//    event.target.playVideo(); // otherwise it can get in this weird pause state on mobile...
  <% end %>
  
  var start_vol = window.localStorage.getItem("youtube_volume") || 50; // default isn't 100? or seemed to be once...
  SetVolume(start_vol);
  document.getElementById('vol-control-id').value = start_vol; // waiting for 500ms seems whack but..but...
  setTimeout(function() {
    // sometimes this doesn't work if run ja [?]
    document.getElementById('vol-control-id').value = youtube_pimw_player.getVolume();
    }, 500);

  setInterval(updateTime, 1000); // only 2/sec because if they happen to do their "own" seek this could interfere and "seek to no where" (well, still could but more rare? :\ )

  // inject copy of plugin FTW :|  
  var my_awesome_script = document.createElement('script');
  my_awesome_script.setAttribute('src','https://playitmyway.org/plugin_javascript/edited_generic_player.js');
  document.head.appendChild(my_awesome_script);
}

function onPlayerStateChange(event) {        
    if(event.data === 0) {          
        console.log('video just ended');
        exitFullScreen();
    }
}

</script>
