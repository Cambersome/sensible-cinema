require 'rubygems'
require 'sane'
require_relative '../lib/overlayer'
require_relative '../lib/keyboard_input'
require_relative '../lib/screen_tracker'  

$VERBOSE = 1 if ARGV.delete('-v')
$TEST = 1 if ARGV.delete('-t')  
if ARGV.length >= 1 && (File.exist? ARGV[0])

  overlay = OverLayer.new(ARGV[0])  
  overlay.start_thread true
  
  if ARGV[1] && File.exist?(ARGV[1])
    # this one doesn't use file updates, so pass it the string
    screen_tracker = ScreenTracker.new_from_yaml File.binread(ARGV[1]), overlay
    screen_tracker.dump_bmp if $VERBOSE 
    screen_tracker.process_forever_in_thread
  else
    puts 'warning--not using screen tracking'
  end

  key_input = KeyboardInput.new overlay
  key_input.start_thread # status thread
  key_input.handle_keystrokes_forever # when this method exits, we want to exit fully...

else
 puts 'syntax: mute_lists.yml [player_descriptor.yml] [-v] (verbose) [-t] (no actual mute) (run your other player in the background, and possibly set priority to low on the player)'
 for file in Dir[__dir__ + '../zamples/*']
   puts "\n", "example file:", file + "\n\n", File.read(file)
 end
 exit 1
end 