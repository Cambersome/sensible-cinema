require 'rubygems'
require 'sane'

for file in ['overlayer', 'keyboard_input', 'screen_tracker', 'mouse']
  require_relative '../lib/' + file
end

$VERBOSE = 1 if ARGV.delete('-v')
$TEST = 1 if ARGV.delete('-t')  

$stderr.puts 'warning: windows only for crucial parts currently' unless  ENV['OS'] == 'Windows_NT'

first = ARGV[0]

if ARGV.length >= 1 && (File.exist?(first) || first == 'test')

  if File.exist? first
    overlay = OverLayer.new(first, ARGV[2])  
    overlay.start_thread true
  else
    puts 'warning--only doing screen dump in 4s...'
    overlay = nil
    $VERBOSE = 1 # that's what they wanted...
    sleep 4
  end
  
  if ARGV[1] && File.exist?(ARGV[1])
    # this one doesn't use file updates, so pass it the string
    screen_tracker = ScreenTracker.new_from_yaml File.binread(ARGV[1]), overlay
    screen_tracker.dump_bmp if $VERBOSE
    exit 1 unless overlay
    screen_tracker.process_forever_in_thread
    Mouse.jitter_forever_in_own_thread
  else
    puts 'warning--not using any screen tracking...'
  end

  key_input = KeyboardInput.new overlay
  key_input.start_thread # status thread
  key_input.handle_keystrokes_forever # when this method exits, we want to exit fully...

else
  puts <<-END

  syntax: mute_lists.yml [player_description.yml] [-v (verbose [chatty] mode)] [-t (test mode)]
    See the #{File.expand_path(File.dirname(__FILE__), "..")}/zamples for more info on creating files.
  END
    
  for file in Dir[__dir__ + '../zamples/mute*/*']
     puts "\n", "Example file:", file + "\n\n", File.read(file)
  end
  
  puts '', 'Available files:'
  for file in Dir[__dir__ + '../zamples/*/*']
    puts File.expand_path(file) unless File.directory?(file)
  end
  exit 1
end 