== ==

NB that sensible cinema can mute by muting system volume/adjusting it [the unmute actually uses adjustment]:
http://www.youtube.com/watch?v=8cUV8DKLOK8
or by using keystrokes sent directly to the application to mute it via the application:
http://www.youtube.com/watch?v=0AsJtVyVMzk
(and has been able to do this for quite some time)

Note also that many other forms of automation techniques have already existed (ex: autoit, etc.)

Note also that this other, separate project http://code.google.com/p/movie-content-editor/
can autodownload captions based on some unique identifier of the video
(a hash, which also apparently works with DVD's), parse the downloaded captions, and
use that information [see below] to call straight into a controlled 
sub-player's API to then monitor and control the player.

Note that sensible-cinema can convert among various types of EDL playbacks, as well.

Note also that mplayer has a sort of EDL training mode, with
realtime tracking and input to create EDL's

Note also that our EDL's can include URL's, ex: the youtube url in question, or netflix url.


== 0.21.6 ==

Can work on windows 7 64 bit now
added ability to control whether needs mouse movement or not [control mouse movement]
brought back in youtube EDL's
added new feature to actually manipulate the mouse to control the playback controls
  of the internal (embedded player), so it's like automaton controlling video playback.

demo of all: http://www.youtube.com/watch?v=gJ4jFCFPan0

== 0.21.6 ==

Note that this other project http://code.google.com/p/movie-content-editor/ previously existed and has
capability to take a list of subtitles (captions) for a VLC compatible device (file, DVD)
and control VLC to mute or skip over scenes.  It can have a user-configurable
list of "words to avoid."  It can also take the caption avoidable scene list, and merge
that one with a user given list, to come up with a "final" skip/mute list.

Note also that comskip:
http://www.kaashoek.com/comskip
Analyzes video for certain aspects and auto-skips scenes based on computerized criteria,
it also includes machine learning for that regard.

== 0.21.5 ==

Minor verbiage/instructions.

== 0.21.4 ==

Added some todo, re-ordered some buttons to make more user friendly et al.

Also note that some other projects, like
http://universalsubtitles.org/
are related and exist and use web players' javascript API hooks into players in order to
track playback and insert dynamic overlays, and use their internal volume
control, all based on timestamp or inferred timestamp.

+- https://github.com/8planes/mirosubs

== 0.21.3 ==

Fix installation mistake.
Add a "netflix instant" descriptor.  Seems to work well on firefox on windows.

Note also that anything you can view on your computer you can view precisely the same,
and with audio, by capturing and "beaming" the screen (like playon.tv does) to your
console or to another computer.  See also VLC, which can stream arbitrary streams,
including the current system screen, and the current system sound, if you pass it
the right directshow parameters.

You could also use a projector to project anything you see on your computer.

Note also that with the previous code (screen tracker), it already had the capability to do 
"mutes" and "blank out overlays" simultaneously, for quite a few releases now.

== 0.21.2 ==

Make fast preview faster, some minor cleanups.

== 0.21.1 ==

Set lower priority for processes better.

== 0.20.5 ==

Now allow for editing using EDL mode only.
Also lower the priority for [most] processes during create time.

== 0.20.3 ==

Minor aesthetics, also it works now with mplayer EDL mode.

== 0.20.0 ==

Add a "fast preview" option which makes editing...faster.  Also it incorporates the "arbitrary precision" around settings.

== 0.19.7 ==

Slightly more user friendly error handling.

== 0.19.6 ==

Update terminology to make it more clear what can play what when it's done.

== 0.19.5 ==

Some notes, deploy methods.

== 0.19.4 ==

Now you can specify an arbitrary "precision" around mute settings to make them more conservative or not.
Add audio alert.
Fix broken button.

== 0.19.3 ==

Hopefully work with audio from more DVD's now.

== 0.19.2 ==

More user friendliness.

== 0.19.1 ==

Clarify buttons' meanings, layout (add one), fix some bugs in create mode, like it not re-loading edited files.
Can optionally watch unedited.

== 0.19.0 ==

Add working EDL playback with mplayer, cleanup interfaces.
Also add ability to arbitrarily "enlargen" the scope of edit decisions (in this case, mutes), to match
(either paranoia or) mplayer playback, useful for daily normal use, too, in principle.

== 0.18.3 ==

Cleanup UI, make more user friendly in a few circumstances, for create, fix buttons.

== 0.18.0 ==

Add some home video EDL's, clarify the license(s), use a slightly better video codec, minor bug fixes/refactoring.

== 0.17.0 ==

Grab using a different codec (wish I could grab to the *same* codec)
Also note that, though Sensible Cinema doesn't do this yet (ping me if you want it),
RiffTrax provides players, capability, and files to be able to "overlay" a video
with another person's voice/audio.

== 0.16.7 ==

Accomodate for disks that have scratches in them better.

== 0.16.5 ==

Enable "preferences merging" of user preferences with an edit decision list to come up with a new edit decision list for them.
The prototypes are there, though it's not enabled.

== 0.16.0 ==

Change the YAML style so that it can have filterable categories (disabled for now in production, but there are unit tests
that show the use of such as a form of "combining user preferences" with the EDL to produce a 
new customized one.

Allow for quite more easily user creation/editing of EDL's by allowing users to access just specific "scenes" of the video edited.

Disable title auto selection use, now use md5sum of the DVD's IFO files for auto-selection of EDL.

== 0.15.0 ==

Use all i-frames for more accurate precision in cutting segments.
Also use ffmpeg and mencoder for the same (no more VLC for encoding). Phew.
Note that by at least this version, auto DVD title selection as a parameter has been built in (see git log).
Note that by at least this version, it could compute an md5sum of a DVD's IFO files to compute
a unique ID for that disk.
Note that before this, I was using the volume name to generate filenames.
Note that several (even more) revisions ago, I used on screen timestamp OCR and thus tracking to be able to 
control output of hulu, youtube, etc. (online displayable programs).

== 0.14.8 ==

Fix some copying bugs.

== 0.14.6 ==

Auto-select EDL depending on which disk they have.

== 0.14.5 ==

Made it distributable more easily.

== 0.14.4 ==

Add a progress bar.

== 0.14.{2,3} ==

Minor changes.

== 0.14.1 ==

Add ChangeLog (this file).

== 0.14.0 ==

Now it offers you a button to either play it on your computer, using VLC, or rip it to a file
(possibly write that to some other media, then play it say on your DVD player), or play it using screen tracking.

== From various previous releases ==
It now provides for screen tracking of DVD's, youtube, hulu, and anything else you want to play on VLC, and has
automatic detection of CD-Drives for ripping/playing back.  It can handle full screen or windowed playback.
It can rip from user specified "title tracks" now.  It has a nice GUI.  The GUI can tell you which DVD is in which 
drive so you know more easily which one to choose.

When screen tracking, it employs a "mouse moving" (feedback to computer) in order to keep the screen timestamp visible.
It allows for both "instant playback" watching a DVD, as well as "ripping a stream to a single file on your computer" in order to view
it from there (which is arguably easier to view).  The single file can be put on a flash drive and played
via some console or other player, or can be copied to a disc and played in a DVD/blu-ray player.

When screen tracking, it uses input to the system (simulated keystrokes) to simulate a user "mute"
It overlays the playing screen (movie) with a separate window in order to simulate a "blank out" or 
"skip this scene" which can be used with or without the mutes, as well.

Note that previous releases had this functionality: VLC could "grab" the various sections from a DVD, one at a time, and
either play them back in sequence [serially], or save all of them, appending to a single final "file", using either
a batch file to accomplish the same, or an XSPF playlist that designated the start and stop times and fed that
into the player.